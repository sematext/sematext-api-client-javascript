/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The SubscriptionDashboardDto model module.
 * @module model/SubscriptionDashboardDto
 * @version 0.5.0
 */
export class SubscriptionDashboardDto {
  /**
   * Constructs a new <code>SubscriptionDashboardDto</code>.
   * @alias module:model/SubscriptionDashboardDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SubscriptionDashboardDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SubscriptionDashboardDto} obj Optional instance to populate.
   * @return {module:model/SubscriptionDashboardDto} The populated <code>SubscriptionDashboardDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SubscriptionDashboardDto();
      if (data.hasOwnProperty('addresses'))
        obj.addresses = ApiClient.convertToType(data['addresses'], 'String');
      if (data.hasOwnProperty('dashboardId'))
        obj.dashboardId = ApiClient.convertToType(data['dashboardId'], 'Number');
      if (data.hasOwnProperty('enable'))
        obj.enable = ApiClient.convertToType(data['enable'], 'Boolean');
      if (data.hasOwnProperty('filters'))
        obj.filters = ApiClient.convertToType(data['filters'], 'String');
      if (data.hasOwnProperty('frequency'))
        obj.frequency = ApiClient.convertToType(data['frequency'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('reportName'))
        obj.reportName = ApiClient.convertToType(data['reportName'], 'String');
      if (data.hasOwnProperty('sendTime'))
        obj.sendTime = ApiClient.convertToType(data['sendTime'], 'Date');
      if (data.hasOwnProperty('subject'))
        obj.subject = ApiClient.convertToType(data['subject'], 'String');
      if (data.hasOwnProperty('text'))
        obj.text = ApiClient.convertToType(data['text'], 'String');
      if (data.hasOwnProperty('timeRange'))
        obj.timeRange = ApiClient.convertToType(data['timeRange'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} addresses
 */
SubscriptionDashboardDto.prototype.addresses = undefined;

/**
 * @member {Number} dashboardId
 */
SubscriptionDashboardDto.prototype.dashboardId = undefined;

/**
 * @member {Boolean} enable
 */
SubscriptionDashboardDto.prototype.enable = undefined;

/**
 * @member {String} filters
 */
SubscriptionDashboardDto.prototype.filters = undefined;

/**
 * Allowed values for the <code>frequency</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionDashboardDto.FrequencyEnum = {
  /**
   * value: "EVERY_FIVE_MINUTES"
   * @const
   */
  EVERY_FIVE_MINUTES: "EVERY_FIVE_MINUTES",

  /**
   * value: "DAILY"
   * @const
   */
  DAILY: "DAILY",

  /**
   * value: "WEEKLY"
   * @const
   */
  WEEKLY: "WEEKLY",

  /**
   * value: "MONTHLY"
   * @const
   */
  MONTHLY: "MONTHLY",

  /**
   * value: "QUARTERLY"
   * @const
   */
  QUARTERLY: "QUARTERLY"
};
/**
 * @member {module:model/SubscriptionDashboardDto.FrequencyEnum} frequency
 */
SubscriptionDashboardDto.prototype.frequency = undefined;

/**
 * @member {Number} id
 */
SubscriptionDashboardDto.prototype.id = undefined;

/**
 * @member {String} reportName
 */
SubscriptionDashboardDto.prototype.reportName = undefined;

/**
 * @member {Date} sendTime
 */
SubscriptionDashboardDto.prototype.sendTime = undefined;

/**
 * @member {String} subject
 */
SubscriptionDashboardDto.prototype.subject = undefined;

/**
 * @member {String} text
 */
SubscriptionDashboardDto.prototype.text = undefined;

/**
 * Allowed values for the <code>timeRange</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionDashboardDto.TimeRangeEnum = {
  /**
   * value: "ONE_DAY"
   * @const
   */
  ONE_DAY: "ONE_DAY",

  /**
   * value: "ONE_WEEK"
   * @const
   */
  ONE_WEEK: "ONE_WEEK",

  /**
   * value: "ONE_MONTH"
   * @const
   */
  ONE_MONTH: "ONE_MONTH",

  /**
   * value: "TWO_MONTH"
   * @const
   */
  TWO_MONTH: "TWO_MONTH",

  /**
   * value: "SIX_MONTH"
   * @const
   */
  SIX_MONTH: "SIX_MONTH",

  /**
   * value: "ONE_YEAR"
   * @const
   */
  ONE_YEAR: "ONE_YEAR"
};
/**
 * @member {module:model/SubscriptionDashboardDto.TimeRangeEnum} timeRange
 */
SubscriptionDashboardDto.prototype.timeRange = undefined;

