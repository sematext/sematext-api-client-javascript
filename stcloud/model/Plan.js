/**
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../api/ApiClient.js'

/**
* The Plan model module.
* @module model/Plan
* @version 0.1.0
*/
export default class Plan {
  /**
    * Constructs a new <code>Plan</code>.
    * @alias module:model/Plan
    * @class
    */

  constructor() {



  }

  /**
    * Constructs a <code>Plan</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Plan} obj Optional instance to populate.
    * @return {module:model/Plan} The populated <code>Plan</code> instance.
    */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Plan()


      if (Object.prototype.hasOwnProperty.call(data,'appType')) {
        obj['appType'] = ApiClient.convertToType(data['appType'], 'String')
      }
      if (Object.prototype.hasOwnProperty.call(data,'custom')) {
        obj['custom'] = ApiClient.convertToType(data['custom'], 'Boolean')
      }
      if (Object.prototype.hasOwnProperty.call(data,'dataRetentionHours')) {
        obj['dataRetentionHours'] = ApiClient.convertToType(data['dataRetentionHours'], 'Number')
      }
      if (Object.prototype.hasOwnProperty.call(data,'defaultTrialPlan')) {
        obj['defaultTrialPlan'] = ApiClient.convertToType(data['defaultTrialPlan'], 'Boolean')
      }
      if (Object.prototype.hasOwnProperty.call(data,'free')) {
        obj['free'] = ApiClient.convertToType(data['free'], 'Boolean')
      }
      if (Object.prototype.hasOwnProperty.call(data,'freeTrialDays')) {
        obj['freeTrialDays'] = ApiClient.convertToType(data['freeTrialDays'], 'Number')
      }
      if (Object.prototype.hasOwnProperty.call(data,'id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number')
      }
      if (Object.prototype.hasOwnProperty.call(data,'maxAlerts')) {
        obj['maxAlerts'] = ApiClient.convertToType(data['maxAlerts'], 'Number')
      }
      if (Object.prototype.hasOwnProperty.call(data,'maxDailyEvents')) {
        obj['maxDailyEvents'] = ApiClient.convertToType(data['maxDailyEvents'], 'Number')
      }
      if (Object.prototype.hasOwnProperty.call(data,'name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String')
      }
      if (Object.prototype.hasOwnProperty.call(data,'planScheme')) {
        obj['planScheme'] = ApiClient.convertToType(data['planScheme'], 'String')
      }
      if (Object.prototype.hasOwnProperty.call(data,'sematextService')) {
        obj['sematextService'] = ApiClient.convertToType(data['sematextService'], 'String')
      }
      if (Object.prototype.hasOwnProperty.call(data,'trialPlan')) {
        obj['trialPlan'] = ApiClient.convertToType(data['trialPlan'], 'Boolean')
      }
    }
    return obj
  }

    /**
    * @member {String} appType
    */
    'appType' = undefined;
    /**
    * @member {Boolean} custom
    */
    'custom' = undefined;
    /**
    * @member {Number} dataRetentionHours
    */
    'dataRetentionHours' = undefined;
    /**
    * @member {Boolean} defaultTrialPlan
    */
    'defaultTrialPlan' = undefined;
    /**
    * @member {Boolean} free
    */
    'free' = undefined;
    /**
    * @member {Number} freeTrialDays
    */
    'freeTrialDays' = undefined;
    /**
    * @member {Number} id
    */
    'id' = undefined;
    /**
    * @member {Number} maxAlerts
    */
    'maxAlerts' = undefined;
    /**
    * @member {Number} maxDailyEvents
    */
    'maxDailyEvents' = undefined;
    /**
    * @member {String} name
    */
    'name' = undefined;
    /**
    * @member {module:model/Plan.PlanSchemeEnum} planScheme
    */
    'planScheme' = undefined;
    /**
    * @member {module:model/Plan.SematextServiceEnum} sematextService
    */
    'sematextService' = undefined;
    /**
    * @member {Boolean} trialPlan
    */
    'trialPlan' = undefined;



    /**
    * Allowed values for the <code>planScheme</code> property.
    * @enum {String}
    * @readonly
    */
    static PlanSchemeEnum = {
      /**
         * value: "SPM_1_0"
         * @const
         */
      'SPM_1_0': 'SPM_1_0',
      /**
         * value: "SPM_2_0"
         * @const
         */
      'SPM_2_0': 'SPM_2_0',
      /**
         * value: "SEARCHENE_1_0"
         * @const
         */
      'SEARCHENE_1_0': 'SEARCHENE_1_0',
      /**
         * value: "LOGSENE_1_0"
         * @const
         */
      'LOGSENE_1_0': 'LOGSENE_1_0',
      /**
         * value: "LOGSENE_2_0"
         * @const
         */
      'LOGSENE_2_0': 'LOGSENE_2_0',
      /**
         * value: "RUM_1_0"
         * @const
         */
      'RUM_1_0': 'RUM_1_0',
      /**
         * value: "RUM_1_1"
         * @const
         */
      'RUM_1_1': 'RUM_1_1',
      /**
         * value: "RUM_EA"
         * @const
         */
      'RUM_EA': 'RUM_EA',
      /**
         * value: "SYNTHETICS_EA"
         * @const
         */
      'SYNTHETICS_EA': 'SYNTHETICS_EA',
      /**
         * value: "SYNTHETICS_1_0"
         * @const
         */
      'SYNTHETICS_1_0': 'SYNTHETICS_1_0'
    };
    /**
    * Allowed values for the <code>sematextService</code> property.
    * @enum {String}
    * @readonly
    */
    static SematextServiceEnum = {
      /**
         * value: "LOGSENE"
         * @const
         */
      'LOGSENE': 'LOGSENE',
      /**
         * value: "SPM"
         * @const
         */
      'SPM': 'SPM',
      /**
         * value: "RUM"
         * @const
         */
      'RUM': 'RUM',
      /**
         * value: "SYNTHETICS"
         * @const
         */
      'SYNTHETICS': 'SYNTHETICS'
    };

}
