/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from '../ApiClient'

/**
 * The UserRole model module.
 * @module model/UserRole
 * @version 0.4.0
 */
export class UserRole {
  /**
   * Constructs a new <code>UserRole</code>.
   * @alias module:model/UserRole
   * @class
   */
  constructor () {}

  /**
   * Constructs a <code>UserRole</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserRole} obj Optional instance to populate.
   * @return {module:model/UserRole} The populated <code>UserRole</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      obj = obj || new UserRole()
      if (data.hasOwnProperty('role'))
        obj.role = ApiClient.convertToType(data['role'], 'String')
      if (data.hasOwnProperty('roleStatus'))
        obj.roleStatus = ApiClient.convertToType(data['roleStatus'], 'String')
      if (data.hasOwnProperty('userEmail'))
        obj.userEmail = ApiClient.convertToType(data['userEmail'], 'String')
    }
    return obj
  }
}

/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
UserRole.RoleEnum = {
  /**
   * value: "SUPER_USER"
   * @const
   */
  SUPER_USER: 'SUPER_USER',

  /**
   * value: "OWNER"
   * @const
   */
  OWNER: 'OWNER',

  /**
   * value: "ADMIN"
   * @const
   */
  ADMIN: 'ADMIN',

  /**
   * value: "USER"
   * @const
   */
  USER: 'USER',

  /**
   * value: "DEMO"
   * @const
   */
  DEMO: 'DEMO',

  /**
   * value: "ANONYMOUS"
   * @const
   */
  ANONYMOUS: 'ANONYMOUS'
}
/**
 * @member {module:model/UserRole.RoleEnum} role
 */
UserRole.prototype.role = undefined

/**
 * Allowed values for the <code>roleStatus</code> property.
 * @enum {String}
 * @readonly
 */
UserRole.RoleStatusEnum = {
  /**
   * value: "INACTIVE"
   * @const
   */
  INACTIVE: 'INACTIVE',

  /**
   * value: "ACTIVE"
   * @const
   */
  ACTIVE: 'ACTIVE'
}
/**
 * @member {module:model/UserRole.RoleStatusEnum} roleStatus
 */
UserRole.prototype.roleStatus = undefined

/**
 * @member {String} userEmail
 */
UserRole.prototype.userEmail = undefined
