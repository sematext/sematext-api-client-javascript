/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from '../ApiClient'
import { UserPermissions } from './UserPermissions'

/**
 * The SubscriptionDto model module.
 * @module model/SubscriptionDto
 * @version 0.4.0
 */
export class SubscriptionDto {
  /**
   * Constructs a new <code>SubscriptionDto</code>.
   * @alias module:model/SubscriptionDto
   * @class
   */
  constructor () {}

  /**
   * Constructs a <code>SubscriptionDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SubscriptionDto} obj Optional instance to populate.
   * @return {module:model/SubscriptionDto} The populated <code>SubscriptionDto</code> instance.
   */
  static constructFromObject (data, obj) {
    if (data) {
      obj = obj || new SubscriptionDto()
      if (data.hasOwnProperty('additionalParams'))
        obj.additionalParams = ApiClient.convertToType(
          data['additionalParams'],
          'String'
        )
      if (data.hasOwnProperty('addresses'))
        obj.addresses = ApiClient.convertToType(data['addresses'], 'String')
      if (data.hasOwnProperty('enable'))
        obj.enable = ApiClient.convertToType(data['enable'], 'Boolean')
      if (data.hasOwnProperty('filters'))
        obj.filters = ApiClient.convertToType(data['filters'], 'String')
      if (data.hasOwnProperty('frequency'))
        obj.frequency = ApiClient.convertToType(data['frequency'], 'String')
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number')
      if (data.hasOwnProperty('reportName'))
        obj.reportName = ApiClient.convertToType(data['reportName'], 'String')
      if (data.hasOwnProperty('sendTime'))
        obj.sendTime = ApiClient.convertToType(data['sendTime'], 'Date')
      if (data.hasOwnProperty('subject'))
        obj.subject = ApiClient.convertToType(data['subject'], 'String')
      if (data.hasOwnProperty('systemId'))
        obj.systemId = ApiClient.convertToType(data['systemId'], 'Number')
      if (data.hasOwnProperty('text'))
        obj.text = ApiClient.convertToType(data['text'], 'String')
      if (data.hasOwnProperty('timeRange'))
        obj.timeRange = ApiClient.convertToType(data['timeRange'], 'String')
      if (data.hasOwnProperty('userPermissions'))
        obj.userPermissions = UserPermissions.constructFromObject(
          data['userPermissions']
        )
    }
    return obj
  }
}

/**
 * @member {String} additionalParams
 */
SubscriptionDto.prototype.additionalParams = undefined

/**
 * @member {String} addresses
 */
SubscriptionDto.prototype.addresses = undefined

/**
 * @member {Boolean} enable
 */
SubscriptionDto.prototype.enable = undefined

/**
 * @member {String} filters
 */
SubscriptionDto.prototype.filters = undefined

/**
 * Allowed values for the <code>frequency</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionDto.FrequencyEnum = {
  /**
   * value: "EVERY_FIVE_MINUTES"
   * @const
   */
  EVERY_FIVE_MINUTES: 'EVERY_FIVE_MINUTES',

  /**
   * value: "DAILY"
   * @const
   */
  DAILY: 'DAILY',

  /**
   * value: "WEEKLY"
   * @const
   */
  WEEKLY: 'WEEKLY',

  /**
   * value: "MONTHLY"
   * @const
   */
  MONTHLY: 'MONTHLY',

  /**
   * value: "QUARTERLY"
   * @const
   */
  QUARTERLY: 'QUARTERLY'
}
/**
 * @member {module:model/SubscriptionDto.FrequencyEnum} frequency
 */
SubscriptionDto.prototype.frequency = undefined

/**
 * @member {Number} id
 */
SubscriptionDto.prototype.id = undefined

/**
 * @member {String} reportName
 */
SubscriptionDto.prototype.reportName = undefined

/**
 * @member {Date} sendTime
 */
SubscriptionDto.prototype.sendTime = undefined

/**
 * @member {String} subject
 */
SubscriptionDto.prototype.subject = undefined

/**
 * @member {Number} systemId
 */
SubscriptionDto.prototype.systemId = undefined

/**
 * @member {String} text
 */
SubscriptionDto.prototype.text = undefined

/**
 * Allowed values for the <code>timeRange</code> property.
 * @enum {String}
 * @readonly
 */
SubscriptionDto.TimeRangeEnum = {
  /**
   * value: "ONE_DAY"
   * @const
   */
  ONE_DAY: 'ONE_DAY',

  /**
   * value: "ONE_WEEK"
   * @const
   */
  ONE_WEEK: 'ONE_WEEK',

  /**
   * value: "ONE_MONTH"
   * @const
   */
  ONE_MONTH: 'ONE_MONTH',

  /**
   * value: "TWO_MONTH"
   * @const
   */
  TWO_MONTH: 'TWO_MONTH',

  /**
   * value: "SIX_MONTH"
   * @const
   */
  SIX_MONTH: 'SIX_MONTH',

  /**
   * value: "ONE_YEAR"
   * @const
   */
  ONE_YEAR: 'ONE_YEAR'
}
/**
 * @member {module:model/SubscriptionDto.TimeRangeEnum} timeRange
 */
SubscriptionDto.prototype.timeRange = undefined

/**
 * @member {module:model/UserPermissions} userPermissions
 */
SubscriptionDto.prototype.userPermissions = undefined
