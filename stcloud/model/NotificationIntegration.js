/**
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../api/ApiClient.js'

/**
* The NotificationIntegration model module.
* @module model/NotificationIntegration
* @version 0.1.0
*/
export default class NotificationIntegration {
  /**
    * Constructs a new <code>NotificationIntegration</code>.
    * @alias module:model/NotificationIntegration
    * @class
    */

  constructor() {



  }

  /**
    * Constructs a <code>NotificationIntegration</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/NotificationIntegration} obj Optional instance to populate.
    * @return {module:model/NotificationIntegration} The populated <code>NotificationIntegration</code> instance.
    */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new NotificationIntegration()


      if (Object.prototype.hasOwnProperty.call(data,'applicability')) {
        obj['applicability'] = ApiClient.convertToType(data['applicability'], 'String')
      }
      if (Object.prototype.hasOwnProperty.call(data,'createDate')) {
        obj['createDate'] = ApiClient.convertToType(data['createDate'], 'Date')
      }
      if (Object.prototype.hasOwnProperty.call(data,'createdByOwner')) {
        obj['createdByOwner'] = ApiClient.convertToType(data['createdByOwner'], 'Boolean')
      }
      if (Object.prototype.hasOwnProperty.call(data,'creatorId')) {
        obj['creatorId'] = ApiClient.convertToType(data['creatorId'], 'Number')
      }
      if (Object.prototype.hasOwnProperty.call(data,'id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number')
      }
      if (Object.prototype.hasOwnProperty.call(data,'integrationType')) {
        obj['integrationType'] = ApiClient.convertToType(data['integrationType'], 'String')
      }
      if (Object.prototype.hasOwnProperty.call(data,'name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String')
      }
      if (Object.prototype.hasOwnProperty.call(data,'params')) {
        obj['params'] = ApiClient.convertToType(data['params'], { 'String': 'String' })
      }
      if (Object.prototype.hasOwnProperty.call(data,'state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'String')
      }
      if (Object.prototype.hasOwnProperty.call(data,'userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number')
      }
    }
    return obj
  }

    /**
    * @member {module:model/NotificationIntegration.ApplicabilityEnum} applicability
    */
    'applicability' = undefined;
    /**
    * @member {Date} createDate
    */
    'createDate' = undefined;
    /**
    * @member {Boolean} createdByOwner
    */
    'createdByOwner' = undefined;
    /**
    * @member {Number} creatorId
    */
    'creatorId' = undefined;
    /**
    * @member {Number} id
    */
    'id' = undefined;
    /**
    * @member {module:model/NotificationIntegration.IntegrationTypeEnum} integrationType
    */
    'integrationType' = undefined;
    /**
    * @member {String} name
    */
    'name' = undefined;
    /**
    * @member {Object.<String, String>} params
    */
    'params' = undefined;
    /**
    * @member {module:model/NotificationIntegration.StateEnum} state
    */
    'state' = undefined;
    /**
    * @member {Number} userId
    */
    'userId' = undefined;



    /**
    * Allowed values for the <code>applicability</code> property.
    * @enum {String}
    * @readonly
    */
    static ApplicabilityEnum = {
      /**
         * value: "NONE"
         * @const
         */
      'NONE': 'NONE',
      /**
         * value: "USE_ALWAYS"
         * @const
         */
      'USE_ALWAYS': 'USE_ALWAYS'
    };
    /**
    * Allowed values for the <code>integrationType</code> property.
    * @enum {String}
    * @readonly
    */
    static IntegrationTypeEnum = {
      /**
         * value: "PAGER_DUTY"
         * @const
         */
      'PAGER_DUTY': 'PAGER_DUTY',
      /**
         * value: "NAGIOS"
         * @const
         */
      'NAGIOS': 'NAGIOS',
      /**
         * value: "WEB_HOOKS"
         * @const
         */
      'WEB_HOOKS': 'WEB_HOOKS',
      /**
         * value: "WEB_HOOKS_TEMPLATE"
         * @const
         */
      'WEB_HOOKS_TEMPLATE': 'WEB_HOOKS_TEMPLATE',
      /**
         * value: "HIP_CHAT"
         * @const
         */
      'HIP_CHAT': 'HIP_CHAT',
      /**
         * value: "EMAIL_LIST"
         * @const
         */
      'EMAIL_LIST': 'EMAIL_LIST',
      /**
         * value: "TEMPORARY_EMAIL_LIST"
         * @const
         */
      'TEMPORARY_EMAIL_LIST': 'TEMPORARY_EMAIL_LIST'
    };
    /**
    * Allowed values for the <code>state</code> property.
    * @enum {String}
    * @readonly
    */
    static StateEnum = {
      /**
         * value: "ACTIVE"
         * @const
         */
      'ACTIVE': 'ACTIVE',
      /**
         * value: "DISABLED"
         * @const
         */
      'DISABLED': 'DISABLED',
      /**
         * value: "DELETED"
         * @const
         */
      'DELETED': 'DELETED'
    };

}
