/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

'use strict'

//const SematextApiClientJavascript = import ('../../stcloud/index.js')
//import {expect} from 'chai'

/* eslint-disable no-unused-vars*/
var instance

describe('(package)', function () {
  describe('DataSeriesRequest', function () {
    beforeEach(function () {
      //instance = (new SematextApiClientJavascript).AlertNotificationsApi()
    })

    it('should create an instance of DataSeriesRequest', function () {
      // TODO: update the code to test DataSeriesRequest
      // expect(instance)to.be.a(SematextApiClientJavascript.DataSeriesRequest)
    })

    it('should have the property defaultInterval (base name: "defaultInterval")', function () {
      // TODO: update the code to test the property defaultInterval
      // expect(instance)to.have.property('defaultInterval')
      // expect(instance.defaultInterval).to.be(expectedValueLiteral);
    })

    it('should have the property end (base name: "end")', function () {
      // TODO: update the code to test the property end
      // expect(instance)to.have.property('end')
      // expect(instance.end).to.be(expectedValueLiteral);
    })

    it('should have the property filters (base name: "filters")', function () {
      // TODO: update the code to test the property filters
      // expect(instance)to.have.property('filters')
      // expect(instance.filters).to.be(expectedValueLiteral);
    })

    it('should have the property granularity (base name: "granularity")', function () {
      // TODO: update the code to test the property granularity
      // expect(instance)to.have.property('granularity')
      // expect(instance.granularity).to.be(expectedValueLiteral);
    })

    it('should have the property interval (base name: "interval")', function () {
      // TODO: update the code to test the property interval
      // expect(instance)to.have.property('interval')
      // expect(instance.interval).to.be(expectedValueLiteral);
    })

    it('should have the property metric (base name: "metric")', function () {
      // TODO: update the code to test the property metric
      // expect(instance)to.have.property('metric')
      // expect(instance.metric).to.be(expectedValueLiteral);
    })

    it('should have the property start (base name: "start")', function () {
      // TODO: update the code to test the property start
      // expect(instance)to.have.property('start')
      // expect(instance.start).to.be(expectedValueLiteral);
    })
  })
})
