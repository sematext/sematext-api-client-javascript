/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

'use strict'

//const SematextApiClientJavascript = import ('../../stcloud/index.js')
//import {expect} from 'chai'

/* eslint-disable no-unused-vars*/
var instance

describe('(package)', function () {
  describe('UpdateAppInfo', function () {
    beforeEach(function () {
      //instance = (new SematextApiClientJavascript).AlertNotificationsApi()
    })

    it('should create an instance of UpdateAppInfo', function () {
      // TODO: update the code to test UpdateAppInfo
      // expect(instance)to.be.a(SematextApiClientJavascript.UpdateAppInfo)
    })

    it('should have the property description (base name: "description")', function () {
      // TODO: update the code to test the property description
      // expect(instance)to.have.property('description')
      // expect(instance.description).to.be(expectedValueLiteral);
    })

    it('should have the property ignorePercentage (base name: "ignorePercentage")', function () {
      // TODO: update the code to test the property ignorePercentage
      // expect(instance)to.have.property('ignorePercentage')
      // expect(instance.ignorePercentage).to.be(expectedValueLiteral);
    })

    it('should have the property maxEvents (base name: "maxEvents")', function () {
      // TODO: update the code to test the property maxEvents
      // expect(instance)to.have.property('maxEvents')
      // expect(instance.maxEvents).to.be(expectedValueLiteral);
    })

    it('should have the property maxLimitMB (base name: "maxLimitMB")', function () {
      // TODO: update the code to test the property maxLimitMB
      // expect(instance)to.have.property('maxLimitMB')
      // expect(instance.maxLimitMB).to.be(expectedValueLiteral);
    })

    it('should have the property name (base name: "name")', function () {
      // TODO: update the code to test the property name
      // expect(instance)to.have.property('name')
      // expect(instance.name).to.be(expectedValueLiteral);
    })

    it('should have the property sampling (base name: "sampling")', function () {
      // TODO: update the code to test the property sampling
      // expect(instance)to.have.property('sampling')
      // expect(instance.sampling).to.be(expectedValueLiteral);
    })

    it('should have the property samplingPercentage (base name: "samplingPercentage")', function () {
      // TODO: update the code to test the property samplingPercentage
      // expect(instance)to.have.property('samplingPercentage')
      // expect(instance.samplingPercentage).to.be(expectedValueLiteral);
    })

    it('should have the property staggering (base name: "staggering")', function () {
      // TODO: update the code to test the property staggering
      // expect(instance)to.have.property('staggering')
      // expect(instance.staggering).to.be(expectedValueLiteral);
    })

    it('should have the property status (base name: "status")', function () {
      // TODO: update the code to test the property status
      // expect(instance)to.have.property('status')
      // expect(instance.status).to.be(expectedValueLiteral);
    })
  })
})
