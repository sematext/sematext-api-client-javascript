/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../stcloud/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../stcloud/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SematextApiClientJavascript);
  }
}(this, function(expect, SematextApiClientJavascript) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SematextApiClientJavascript.TokensApiControllerApi();
  });

  describe('(package)', function() {
    describe('TokensApiControllerApi', function() {
      describe('createAppToken', function() {
        it('should call createAppToken successfully', function(done) {
          // TODO: uncomment, update parameter values for createAppToken call and complete the assertions
          /*

          instance.createAppToken(body, appId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.TokenResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('deleteAppToken1', function() {
        it('should call deleteAppToken1 successfully', function(done) {
          // TODO: uncomment, update parameter values for deleteAppToken1 call and complete the assertions
          /*

          instance.deleteAppToken1(appId, tokenId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.GenericMapBasedApiResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAppTokens1', function() {
        it('should call getAppTokens1 successfully', function(done) {
          // TODO: uncomment, update parameter values for getAppTokens1 call and complete the assertions
          /*

          instance.getAppTokens1(appId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.TokensResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('regenerateAppToken1', function() {
        it('should call regenerateAppToken1 successfully', function(done) {
          // TODO: uncomment, update parameter values for regenerateAppToken1 call and complete the assertions
          /*

          instance.regenerateAppToken1(appId, tokenId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.TokenResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateAppToken', function() {
        it('should call updateAppToken successfully', function(done) {
          // TODO: uncomment, update parameter values for updateAppToken call and complete the assertions
          /*

          instance.updateAppToken(body, appId, tokenId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.TokenResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
