/*
 * Sematext Cloud API
 * API Explorer provides access and documentation for Sematext REST API. The REST API requires the API Key to be sent as part of `Authorization` header. E.g.: `Authorization : apiKey e5f18450-205a-48eb-8589-7d49edaea813`.
 *
 * OpenAPI spec version: v3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
;(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../stcloud/index'], factory)
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../stcloud/index'))
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SematextApiClientJavascript)
  }
})(this, function (expect, SematextApiClientJavascript) {
  'use strict'

  var instance

  beforeEach(function () {
    instance = new SematextApiClientJavascript.AlertsApi()
  })

  describe('(package)', function () {
    describe('AlertsApi', function () {
      describe('createAlertUsingPOST', function () {
        it('should call createAlertUsingPOST successfully', function (done) {
          // TODO: uncomment, update parameter values for createAlertUsingPOST call and complete the assertions
          /*

          instance.createAlertUsingPOST(body).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.AlertRuleResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done()
        })
      })
      describe('deleteAlertRuleUsingDELETE1', function () {
        it('should call deleteAlertRuleUsingDELETE1 successfully', function (done) {
          // TODO: uncomment, update parameter values for deleteAlertRuleUsingDELETE1 call and complete the assertions
          /*

          instance.deleteAlertRuleUsingDELETE1(updateableAlertId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.GenericMapBasedApiResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done()
        })
      })
      describe('disableAlertRuleUsingPUT', function () {
        it('should call disableAlertRuleUsingPUT successfully', function (done) {
          // TODO: uncomment, update parameter values for disableAlertRuleUsingPUT call and complete the assertions
          /*

          instance.disableAlertRuleUsingPUT(updateableAlertId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.GenericMapBasedApiResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done()
        })
      })
      describe('enableAlertRuleUsingPUT', function () {
        it('should call enableAlertRuleUsingPUT successfully', function (done) {
          // TODO: uncomment, update parameter values for enableAlertRuleUsingPUT call and complete the assertions
          /*

          instance.enableAlertRuleUsingPUT(updateableAlertId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.GenericMapBasedApiResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done()
        })
      })
      describe('getAlertRulesForAppUsingGET1', function () {
        it('should call getAlertRulesForAppUsingGET1 successfully', function (done) {
          // TODO: uncomment, update parameter values for getAlertRulesForAppUsingGET1 call and complete the assertions
          /*

          instance.getAlertRulesForAppUsingGET1(appId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SematextApiClientJavascript.AlertRulesResponse);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done()
        })
      })
    })
  })
})
